openapi: 3.0.0
info:
  title: Large JSON File API
  description: API for efficiently querying, filtering, sorting, and searching data from large JSON files
  version: 1.0.0
servers:
  - url: /
    description: Development server
tags:
  - name: Files
    description: Operations related to JSON files
  - name: Cache
    description: Operations related to cache management
paths:
  /api/files:
    get:
      summary: List all available JSON files
      description: Returns a list of all JSON files available in the data directory
      tags:
        - Files
      responses:
        '200':
          description: List of JSON files
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  files:
                    type: array
                    items:
                      type: string
                      example: "users.json"

  /api/file/{fileName}:
    get:
      summary: Query data from a JSON file
      description: Query, filter, sort, and paginate data from a large JSON file
      tags:
        - Files
      parameters:
        - in: path
          name: fileName
          required: true
          schema:
            type: string
          description: Name of the JSON file to query
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Page number for pagination
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 1000
            default: 100
          description: Number of items per page
        - in: query
          name: sortBy
          schema:
            type: string
          description: Field to sort results by
        - in: query
          name: sortOrder
          schema:
            type: string
            enum: [asc, desc]
            default: asc
          description: Sort order (ascending or descending)
        - in: query
          name: search
          schema:
            type: string
          description: Search string to filter results
        - in: query
          name: searchFields
          schema:
            type: string
          description: Comma-separated list of fields to search in
        - in: query
          name: "filter.*"
          schema:
            type: string
          description: Filter criteria (e.g., filter.age=25, filter.status=[active,pending])
      responses:
        '200':
          description: Filtered and paginated data
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  file:
                    type: string
                    example: "users.json"
                  data:
                    type: array
                    items:
                      type: object
                  total:
                    type: integer
                    example: 1250
                  page:
                    type: integer
                    example: 1
                  limit:
                    type: integer
                    example: 100
                  totalPages:
                    type: integer
                    example: 13
        '404':
          description: File not found
        '400':
          description: Invalid parameters

  /api/file/{fileName}/structure:
    get:
      summary: Get JSON file structure information
      description: Detect and return information about the structure of a JSON file
      tags:
        - Files
      parameters:
        - in: path
          name: fileName
          required: true
          schema:
            type: string
          description: Name of the JSON file
      responses:
        '200':
          description: JSON file structure information
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  file:
                    type: string
                    example: "users.json"
                  structure:
                    type: object
                    properties:
                      type:
                        type: string
                        example: "array"
                      fields:
                        type: array
                        items:
                          type: string
                      sample:
                        type: object
                      rootElementType:
                        type: string
                        example: "object"
                      count:
                        type: integer
                        example: 10
        '404':
          description: File not found

  /api/cache/clear:
    post:
      summary: Clear all cache
      description: Clear all cached query results
      tags:
        - Cache
      responses:
        '200':
          description: Cache cleared successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "All cache cleared"
                  entriesCleared:
                    type: integer
                    example: 15

  /api/cache/clear/{fileName}:
    post:
      summary: Clear cache for a specific file
      description: Clear cached query results for a specific JSON file
      tags:
        - Cache
      parameters:
        - in: path
          name: fileName
          required: true
          schema:
            type: string
          description: Name of the JSON file
      responses:
        '200':
          description: Cache cleared successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Cache cleared for file: users.json"
                  entriesCleared:
                    type: integer
                    example: 5
